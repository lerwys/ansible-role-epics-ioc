---
- name: Check if IOC directory already exists
  stat:
    path: "{{ item.clone_path }}"
  register: clone_path_stat
  when: (item.install_via_makefile is defined and
        item.install_via_makefile | bool) or
        (item.clone_only is defined and
         item.clone_only | bool)

- name: Ensure IOC directory exists
  file:
    path: "{{ item.clone_path }}"
    state: directory
    recurse: true
    mode: 0755
  become: true
  become_user: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
  when: not clone_path_stat.stat.exists and
        ((item.install_via_makefile is defined and
        item.install_via_makefile | bool) or
        (item.clone_only is defined and
         item.clone_only | bool))

# Ansible user variable, ansible_user, ansible_ssh_user, etc is a mess.
# Going to use th approach in https://github.com/geerlingguy/drupal-vm/issues/1302
# to fix that.
- name: "Ensure repository {{ item.repo_name }} is cloned"
  git:
    repo: "{{ item.org_url }}/{{ item.repo_name }}"
    dest: "{{ item.clone_path }}/{{ item.repo_name }}"
    version: "{{ item.repo_version | default('master') }}"
    accept_hostkey: "{{ item.git_accept_hostkey | default(omit) }}"
    ssh_opts: "{{ item.git_ssh_opts | default(omit) }}"
    force: "{{ item.force_version | default(false) }}"
  register: git_result
  become: true
  become_user: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
  when: (item.install_via_makefile is defined and
        item.install_via_makefile | bool) or
        (item.clone_only is defined and
         item.clone_only | bool)

- name: "Define {{ item.repo_name }} chdir variable"
  set_fact:
    repo_install_chdir: "{{ item.install_chdir | default('') }}"

- name: "Replace RELEASE file with a custom one for {{ item.repo_name }}"
  template:
    src: "RELEASE.j2"
    dest: "{{ item.clone_path }}/{{ item.repo_name }}/{{ repo_install_chdir }}/configure/RELEASE"
    owner: "{{ item.make_install_as_user | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    group: "{{ item.make_install_as_user | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    force: true
    mode: 0644
  vars:
    __item_epics_modules_cfg: "{{ item.epics_modules_cfg | default(epics_ioc_epics_modules_cfg) }}"
    __item_epics_base_dir: "{{ item.epics_base_dir | default(epics_ioc_epics_base_dir) }}"
  become: true
  when: item.install_via_makefile is defined and
        (item.install_via_makefile | bool) and
        git_result.changed

- name: "Install {{ item.repo_name }} via Makefile"
  make:
    chdir: "{{ item.clone_path }}/{{ item.repo_name }}/{{ repo_install_chdir }}"
    target: "{{ make_target | default('install') }}"
    params: "{{ item.make_install_opts | default({}) }}"
  become: true
  become_user: "{{ item.make_install_as_user | default(ansible_env.USER, true) | default(ansible_user_id) }}"
  loop: "{{ item.make_install_targets }}"
  loop_control:
    loop_var: make_target
  when: item.install_via_makefile is defined and
        (item.install_via_makefile | bool) and
        git_result.changed
